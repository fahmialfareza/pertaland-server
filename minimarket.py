# -*- coding: utf-8 -*-
"""Salinan ML_MINIMARKET.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DTSzCekDjh3Y3Gj7Ld3UaQ4FQlN5inkW
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import pylab as pl
import numpy as np
import scipy.optimize as opt
from sklearn import preprocessing
from sklearn.model_selection import train_test_split
# %matplotlib inline
import matplotlib.pyplot as plt
from sklearn import svm
from sklearn.metrics import f1_score
import sys
import json
import random

def minimarket(ho, of, rd, po, om):
    cell_df = pd.read_csv("minimarket.csv")
    cell_df = cell_df.drop(['No'], axis=1)

    cell_df = cell_df.append({'Hotel' : ho, 'Office' : of, 'RoadDensity' : rd, 'Population' : po, 'OtherMinimarket': om, 'Class' : 0}, ignore_index=True)

    feature_df = cell_df[['Hotel', 'Office', 'RoadDensity', 'Population', 'OtherMinimarket']]

    #train_feature_df = feature_df[0:100]
    #train_cell_df = cell_df[0:100]

    #train_cell_df

    X = preprocessing.StandardScaler().fit(feature_df).transform(feature_df.astype(float))
    y = cell_df['Class'].values

    length = X.shape
    length = length[0]

    X_train = X[0:(length-1)]
    y_train = y[0:(length-1)]

    X_test = X[(length-1):length]
    y_test = y[(length-1):length]

    clf = svm.SVC(kernel='rbf', gamma='auto')
    clf.fit(X_train, y_train)
    yhat = clf.predict(X_test)

    yhat = yhat[0]

    print(ho, of, rd, po, om)

    if yhat == 1:
        return True
    else:
        return False
